# Generated by Django 4.2.1 on 2023-05-22 07:29

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('title', models.CharField(blank=True, max_length=50)),
                ('feature_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('short_description', models.CharField(blank=True, max_length=300)),
                ('seo_title', models.CharField(blank=True, max_length=50)),
                ('seo_keyword', models.CharField(blank=True, max_length=200)),
                ('seo_image', models.ImageField(blank=True, null=True, upload_to='seo_images/')),
                ('seo_description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Post',
                'db_table': 'Post',
            },
        ),
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50)),
                ('colour', models.CharField(blank=True, max_length=25)),
            ],
            options={
                'verbose_name_plural': 'Post Category',
            },
        ),
        migrations.CreateModel(
            name='UserViews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userViews_post', to='blog.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userViews_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Views',
            },
        ),
        migrations.CreateModel(
            name='PostViews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('views', models.PositiveIntegerField(null=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postViews_post', to='blog.post')),
            ],
            options={
                'verbose_name_plural': 'Post Views',
            },
        ),
        migrations.CreateModel(
            name='PostTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.CharField(blank=True, max_length=200)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postTags_post', to='blog.post')),
            ],
            options={
                'verbose_name_plural': 'Post Tags',
            },
        ),
        migrations.CreateModel(
            name='PostLikes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_liked', models.BooleanField(default=False)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postLikes_post', to='blog.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postLikes_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Post Likes',
            },
        ),
        migrations.CreateModel(
            name='PostDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', ckeditor.fields.RichTextField()),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postDescription_post', to='blog.post')),
            ],
            options={
                'verbose_name_plural': 'Post Description',
            },
        ),
        migrations.CreateModel(
            name='PostComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=300)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postComment_post', to='blog.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postComment_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Post Comments',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='post_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_postCategory', to='blog.postcategory'),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='FeaturePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(blank=True, max_length=30)),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='featurePost_post', to='blog.post')),
            ],
            options={
                'verbose_name_plural': 'Feature Post',
            },
        ),
    ]
